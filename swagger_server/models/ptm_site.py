# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from models.base_model_ import Model
from swagger_server import util


class PTMSite(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, site: str=None, position: str=None):  # noqa: E501
        """PTMSite - a model defined in Swagger

        :param site: The site of this PTMSite.  # noqa: E501
        :type site: str
        :param position: The position of this PTMSite.  # noqa: E501
        :type position: str
        """
        self.swagger_types = {
            'site': str,
            'position': str
        }

        self.attribute_map = {
            'site': 'site',
            'position': 'position'
        }

        self._site = site
        self._position = position

    @classmethod
    def from_dict(cls, dikt) -> 'PTMSite':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PTMSite of this PTMSite.  # noqa: E501
        :rtype: PTMSite
        """
        return util.deserialize_model(dikt, cls)

    @property
    def site(self) -> str:
        """Gets the site of this PTMSite.


        :return: The site of this PTMSite.
        :rtype: str
        """
        return self._site

    @site.setter
    def site(self, site: str):
        """Sets the site of this PTMSite.


        :param site: The site of this PTMSite.
        :type site: str
        """
        if site is None:
            raise ValueError("Invalid value for `site`, must not be `None`")  # noqa: E501

        self._site = site

    @property
    def position(self) -> str:
        """Gets the position of this PTMSite.


        :return: The position of this PTMSite.
        :rtype: str
        """
        return self._position

    @position.setter
    def position(self, position: str):
        """Sets the position of this PTMSite.


        :param position: The position of this PTMSite.
        :type position: str
        """
        allowed_values = ["Anywhere", "Protein N-term", "Protein C-term", "Any N-term", "Any C-term"]  # noqa: E501
        if position not in allowed_values:
            raise ValueError(
                "Invalid value for `position` ({0}), must be one of {1}"
                .format(position, allowed_values)
            )

        self._position = position
