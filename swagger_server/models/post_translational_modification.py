# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from models.ptm_site import PTMSite
from models.base_model_ import Model
from swagger_server import util
from models.ontology_term import OntologyTerm


class PostTranslationalModification(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, ontology_term: OntologyTerm=None, chemical_formula: str=None, sites: List[PTMSite]=None, monoisotopic_mass: float=None):  # noqa: E501
        """PostTranslationalModification - a model defined in Swagger

        :param ontology_term: The ontology_term of this PostTranslationalModification.  # noqa: E501
        :type ontology_term: OntologyTerm
        :param chemical_formula: The chemical_formula of this PostTranslationalModification.  # noqa: E501
        :type chemical_formula: str
        :param sites: The sites of this PostTranslationalModification.  # noqa: E501
        :type sites: List[PTMSite]
        :param monoisotopic_mass: The monoisotopic_mass of this PostTranslationalModification.  # noqa: E501
        :type monoisotopic_mass: float
        """
        self.swagger_types = {
            'ontology_term': OntologyTerm,
            'chemical_formula': str,
            'sites': List[PTMSite],
            'monoisotopic_mass': float
        }

        self.attribute_map = {
            'ontology_term': 'ontologyTerm',
            'chemical_formula': 'chemicalFormula',
            'sites': 'sites',
            'monoisotopic_mass': 'monoisotopicMass'
        }

        self._ontology_term = ontology_term
        self._chemical_formula = chemical_formula
        self._sites = sites
        self._monoisotopic_mass = monoisotopic_mass

    @classmethod
    def from_dict(cls, dikt) -> 'PostTranslationalModification':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PostTranslationalModification of this PostTranslationalModification.  # noqa: E501
        :rtype: PostTranslationalModification
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ontology_term(self) -> OntologyTerm:
        """Gets the ontology_term of this PostTranslationalModification.


        :return: The ontology_term of this PostTranslationalModification.
        :rtype: OntologyTerm
        """
        return self._ontology_term

    @ontology_term.setter
    def ontology_term(self, ontology_term: OntologyTerm):
        """Sets the ontology_term of this PostTranslationalModification.


        :param ontology_term: The ontology_term of this PostTranslationalModification.
        :type ontology_term: OntologyTerm
        """
        if ontology_term is None:
            raise ValueError("Invalid value for `ontology_term`, must not be `None`")  # noqa: E501

        self._ontology_term = ontology_term

    @property
    def chemical_formula(self) -> str:
        """Gets the chemical_formula of this PostTranslationalModification.

        Chemical formula for the PTM  # noqa: E501

        :return: The chemical_formula of this PostTranslationalModification.
        :rtype: str
        """
        return self._chemical_formula

    @chemical_formula.setter
    def chemical_formula(self, chemical_formula: str):
        """Sets the chemical_formula of this PostTranslationalModification.

        Chemical formula for the PTM  # noqa: E501

        :param chemical_formula: The chemical_formula of this PostTranslationalModification.
        :type chemical_formula: str
        """

        self._chemical_formula = chemical_formula

    @property
    def sites(self) -> List[PTMSite]:
        """Gets the sites of this PostTranslationalModification.

        Aminoacid affected by the Posttranlational modification  # noqa: E501

        :return: The sites of this PostTranslationalModification.
        :rtype: List[PTMSite]
        """
        return self._sites

    @sites.setter
    def sites(self, sites: List[PTMSite]):
        """Sets the sites of this PostTranslationalModification.

        Aminoacid affected by the Posttranlational modification  # noqa: E501

        :param sites: The sites of this PostTranslationalModification.
        :type sites: List[PTMSite]
        """

        self._sites = sites

    @property
    def monoisotopic_mass(self) -> float:
        """Gets the monoisotopic_mass of this PostTranslationalModification.

        The exact atomic mass shift produced by the modification. Please use at least 5 decimal places of accuracy.  # noqa: E501

        :return: The monoisotopic_mass of this PostTranslationalModification.
        :rtype: float
        """
        return self._monoisotopic_mass

    @monoisotopic_mass.setter
    def monoisotopic_mass(self, monoisotopic_mass: float):
        """Sets the monoisotopic_mass of this PostTranslationalModification.

        The exact atomic mass shift produced by the modification. Please use at least 5 decimal places of accuracy.  # noqa: E501

        :param monoisotopic_mass: The monoisotopic_mass of this PostTranslationalModification.
        :type monoisotopic_mass: float
        """

        self._monoisotopic_mass = monoisotopic_mass

    def to_str(self):
      return super().to_str()


